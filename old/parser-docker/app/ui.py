import streamlit as st
import asyncio
import pandas as pd
import os
from scraper import process_items

st.set_page_config(page_title="Price Scraper", layout="wide")
st.title("üîç Price Scraper ‚Äî –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ (–∫–æ–ª–æ–Ω–∫–∞ `item`)", type="csv")
output_file = "output.csv"

if uploaded_file:
    with open("input.csv", "wb") as f:
        f.write(uploaded_file.getbuffer())
    st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")

    if st.button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"):
        st.info("–°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è... –ü–æ–¥–æ–∂–¥–∏—Ç–µ ‚è≥")

        progress_bar = st.progress(0)
        status_text = st.empty()

        def update_progress(done, total):
            percent = int(done / total * 100)
            progress_bar.progress(percent)
            status_text.text(f"{done}/{total} ({percent}%)")

        asyncio.run(process_items("input.csv", output_file, progress_callback=update_progress))
        st.success("‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if os.path.exists(output_file):
    st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    df = pd.read_csv(output_file)
    st.dataframe(df)
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å CSV", df.to_csv(index=False), "results.csv")

if os.path.exists("errors.log"):
    st.subheader("‚ö†Ô∏è –õ–æ–≥ –æ—à–∏–±–æ–∫")
    with open("errors.log", "r", encoding="utf-8") as f:
        st.text(f.read())
